{
  "_args": [
    [
      {
        "raw": "node-zopfli@^1.4.0",
        "scope": null,
        "escapedName": "node-zopfli",
        "name": "node-zopfli",
        "rawSpec": "^1.4.0",
        "spec": ">=1.4.0 <2.0.0",
        "type": "range"
      },
      "/Users/rguleria/Documents/Stuff/Starman/node_modules/shrink-ray"
    ]
  ],
  "_from": "node-zopfli@>=1.4.0 <2.0.0",
  "_id": "node-zopfli@1.4.0",
  "_inCache": true,
  "_location": "/node-zopfli",
  "_nodeVersion": "3.3.0",
  "_npmUser": {
    "name": "pierre.inglebert",
    "email": "pierre.inglebert@gmail.com"
  },
  "_npmVersion": "2.13.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-zopfli@^1.4.0",
    "scope": null,
    "escapedName": "node-zopfli",
    "name": "node-zopfli",
    "rawSpec": "^1.4.0",
    "spec": ">=1.4.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/shrink-ray"
  ],
  "_resolved": "https://registry.npmjs.org/node-zopfli/-/node-zopfli-1.4.0.tgz",
  "_shasum": "51a974ed2221fcc1bb9dbed36682057fa4c1fa94",
  "_shrinkwrap": null,
  "_spec": "node-zopfli@^1.4.0",
  "_where": "/Users/rguleria/Documents/Stuff/Starman/node_modules/shrink-ray",
  "author": {
    "name": "Pierre Inglebert",
    "email": "pierre.inglebert@gmail.com"
  },
  "bin": {
    "zopfli": "bin/zopfli",
    "zopflipng": "bin/zopflipng"
  },
  "binary": {
    "module_name": "zopfli",
    "module_path": "./lib/binding/{node_abi}-{platform}-{arch}",
    "remote_path": "./{configuration}",
    "package_name": "{module_name}-v{version}-{node_abi}-{platform}-{arch}.tar.gz",
    "host": "https://node-zopfli.s3.amazonaws.com"
  },
  "bugs": {
    "url": "https://github.com/pierreinglebert/node-zopfli/issues"
  },
  "contributors": [
    {
      "name": "duralog",
      "email": "funisher@gmail.com"
    },
    {
      "name": "MayhemYDG",
      "email": "stepien.nicolas@gmail.com"
    },
    {
      "name": "XhmikosR",
      "email": "xhmikosr@gmail.com"
    }
  ],
  "dependencies": {
    "bluebird": "^2.9.25",
    "commander": "^2.8.1",
    "defaults": "^1.0.2",
    "nan": "^2.0.0",
    "node-pre-gyp": "^0.6.4"
  },
  "description": "Bindings for Zopfli compressing lib. Compress gzip files 5% better than gzip.",
  "devDependencies": {
    "async": "^0.9.0",
    "aws-sdk": "~2.0.25",
    "chai": "^2.3.0",
    "coveralls": "^2.11.2",
    "eslint": "1.0.0",
    "istanbul": "^0.3.13",
    "mocha": "^2.2.4",
    "randomstring": "^1.0.5"
  },
  "directories": {},
  "dist": {
    "shasum": "51a974ed2221fcc1bb9dbed36682057fa4c1fa94",
    "tarball": "https://registry.npmjs.org/node-zopfli/-/node-zopfli-1.4.0.tgz"
  },
  "engines": {
    "node": ">=0.10"
  },
  "files": [
    "bin",
    "lib",
    "src",
    "zopfli",
    "binding.gyp"
  ],
  "gitHead": "1d479ad8e7c83ab5f8ea2eec2451901ead86c004",
  "gypfile": true,
  "homepage": "https://github.com/pierreinglebert/node-zopfli",
  "keywords": [
    "zopfli",
    "zlib",
    "compress",
    "gzip",
    "deflate"
  ],
  "license": "MIT",
  "main": "lib/zopfli.js",
  "maintainers": [
    {
      "name": "pierre.inglebert",
      "email": "pierre.inglebert@gmail.com"
    }
  ],
  "name": "node-zopfli",
  "optionalDependencies": {},
  "readme": "# node-zopfli\n\n[![NPM version][npm-image]][npm-url]\n[![Linux Build Status][travis-image]][travis-url]\n[![Windows Build Status][appveyor-image]][appveyor-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n[![Dependency Status][dep-image]][dep-url]\n[![devDependency Status][devDep-image]][devDep-url]\n[![Stories in Ready][waffle-image]][waffle-url]\n\nNode.js bindings for [Zopfli](https://en.wikipedia.org/wiki/Zopfli) compressing library.\nCompress gzip files 5% better compared to gzip.\n\nIt is considerably slower than gzip (~100x) so you may want to use it only for static content and cached resources.\n\n\n## Prerequisites for building\n\n* Python 2.7\n* GCC (Unix) or Visual Studio Express (Windows), see [Node Building tools](https://github.com/TooTallNate/node-gyp#installation)\n\n## Usage\n\n### Install\n\n```shell\nnpm install node-zopfli\n```\n\nor if you want zopfli binary globally\n\n```shell\nnpm install -g node-zopfli\n```\n\n### Binary (from command line)\nTo gzip a file\n\n```shell\nzopfli file.txt\n```\n\nTo compress a png file\n\n```shell\nzopflipng file.png out.png\n```\n\n### Usage examples\n#### Stream (async):\n\n```js\nvar zopfli = require('node-zopfli');\nfs.createReadStream('file.js')\n  .pipe(zopfli.createGzip(options))\n  .pipe(fs.createWriteStream('file.js.gz'));\n```\n\nInstead of `zopfli.createGzip`, you can also use\n\n```js\nnew Zopfli('gzip', options);\n```\n\n#### Buffer (async):\n\n```js\nvar zopfli = require('node-zopfli');\nvar input = new Buffer('I want to be compressed');\nzopfli.deflate(input, options, function(err, deflated) {});\nzopfli.zlib(input, options, function(err, zlibed) {});\nzopfli.gzip(input, options, function(err, gziped) {});\n```\n\n#### Buffer (sync):\n\n```js\nvar zopfli = require('node-zopfli');\nvar input = new Buffer('I want to be compressed');\nvar deflated = zopfli.deflateSync(input, options);\nvar zlibed = zopfli.zlibSync(input, options);\nvar gziped = zopfli.gzipSync(input, options);\n```\n\n### API\n\n#### compress(input, format, [options, callback])\n\n`input` is the input buffer\n\n`format` can be one of `deflate`, `zlib` and `gzip`\n\n`callback`, if present, gets two arguments `(err, buffer)` where `err` is an error object, if any, and `buffer` is the resultant compressed data.\n\nIf no callback is provided, it returns an A+ Promise.\n\n##### aliases\n\n`deflate`, `zlib` and `gzip` methods are aliases on `compress` without `format` argument.\n\n#### Options\n\nHere are the options with defaults values you can pass to zopfli:\n\n```js\n{\n  verbose: false,\n  verbose_more: false,\n  numiterations: 15,\n  blocksplitting: true,\n  blocksplittinglast: false,\n  blocksplittingmax: 15\n}\n```\n\n##### numiterations\nMaximum amount of times to rerun forward and backward pass to optimize LZ77 compression cost. Good values: 10, 15 for small files, 5 for files over several MB in size or it will be too slow.\n\n##### blocksplitting\nIf true, splits the data in multiple deflate blocks with optimal choice for the block boundaries. Block splitting gives better compression.\n\n##### blocksplittinglast\nIf true, chooses the optimal block split points only after doing the iterative LZ77 compression. If false, chooses the block split points first, then does iterative LZ77 on each individual block. Depending on the file, either first or last gives the best compression.\n\n##### blocksplittingmax\nMaximum amount of blocks to split into (0 for unlimited, but this can give extreme results that hurt compression on some files).\n\n\n## Build from sources\n\n```shell\ngit clone https://github.com/pierreinglebert/node-zopfli --recursive\ncd node-zopfli\nnpm install\n```\n\n## Tests\nmocha is used for tests, you can run them with:\n\n```shell\nnpm test\n```\n\n\n[npm-image]: https://img.shields.io/npm/v/node-zopfli.svg\n[npm-url]: https://www.npmjs.com/package/node-zopfli\n[waffle-image]: https://badge.waffle.io/pierreinglebert/node-zopfli.svg\n[waffle-url]: https://waffle.io/pierreinglebert/node-zopfli\n[travis-image]: https://img.shields.io/travis/pierreinglebert/node-zopfli/master.svg?label=Linux%20build\n[travis-url]: https://travis-ci.org/pierreinglebert/node-zopfli\n[appveyor-image]: https://img.shields.io/appveyor/ci/pierreinglebert/node-zopfli/master.svg?label=Windows%20build\n[appveyor-url]: https://ci.appveyor.com/project/pierreinglebert/node-zopfli/branch/master\n[coveralls-image]: https://img.shields.io/coveralls/pierreinglebert/node-zopfli.svg\n[coveralls-url]: https://coveralls.io/r/pierreinglebert/node-zopfli?branch=master\n[dep-image]: https://img.shields.io/david/pierreinglebert/node-zopfli.svg\n[dep-url]: https://david-dm.org/pierreinglebert/node-zopfli\n[devDep-image]: https://img.shields.io/david/dev/pierreinglebert/node-zopfli.svg\n[devDep-url]: https://david-dm.org/pierreinglebert/node-zopfli#info=devDependencies\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pierreinglebert/node-zopfli.git"
  },
  "scripts": {
    "coveralls": "coveralls < ./coverage/lcov.info",
    "install": "node-pre-gyp install --fallback-to-build",
    "lint": "eslint .",
    "mocha": "mocha test",
    "test": "npm run lint && npm run mocha",
    "test-cov": "istanbul cover ./node_modules/mocha/bin/_mocha -- -R spec test"
  },
  "version": "1.4.0"
}
