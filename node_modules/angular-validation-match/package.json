{
  "_args": [
    [
      {
        "raw": "angular-validation-match@^1.9.0",
        "scope": null,
        "escapedName": "angular-validation-match",
        "name": "angular-validation-match",
        "rawSpec": "^1.9.0",
        "spec": ">=1.9.0 <2.0.0",
        "type": "range"
      },
      "/Users/rguleria/Documents/Stuff/Starman"
    ]
  ],
  "_from": "angular-validation-match@>=1.9.0 <2.0.0",
  "_id": "angular-validation-match@1.9.0",
  "_inCache": true,
  "_location": "/angular-validation-match",
  "_nodeVersion": "5.8.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/angular-validation-match-1.9.0.tgz_1462549413232_0.4304229321423918"
  },
  "_npmUser": {
    "name": "sharpie",
    "email": "dumbdrum@gmail.com"
  },
  "_npmVersion": "3.7.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular-validation-match@^1.9.0",
    "scope": null,
    "escapedName": "angular-validation-match",
    "name": "angular-validation-match",
    "rawSpec": "^1.9.0",
    "spec": ">=1.9.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular-validation-match/-/angular-validation-match-1.9.0.tgz",
  "_shasum": "03d82d0b983bf22366c5d22a0c291731625dcf80",
  "_shrinkwrap": null,
  "_spec": "angular-validation-match@^1.9.0",
  "_where": "/Users/rguleria/Documents/Stuff/Starman",
  "author": "",
  "bugs": {
    "url": "https://github.com/TheSharpieOne/angular-validation-match/issues"
  },
  "dependencies": {
    "angular": ">=1.3.0 <2.0.0"
  },
  "description": "Checks if one input matches another",
  "devDependencies": {
    "angular-mocks": ">=1.3.0 <2.0.0",
    "chai": "^3.4.1",
    "dirty-chai": "1.2.2",
    "gulp": "^3.9.0",
    "gulp-bump": "^1.0.0",
    "gulp-karma": "0.0.5",
    "gulp-ng-annotate": "^1.1.0",
    "gulp-rename": "^1.2.2",
    "gulp-sequence": "^0.4.1",
    "gulp-uglify": "^1.5.1",
    "gulp-wrap": "^0.11.0",
    "karma": "^0.13.15",
    "karma-chrome-launcher": "^0.2.2",
    "karma-firefox-launcher": "^0.1.0",
    "karma-mocha": "^0.2.1",
    "karma-phantomjs-launcher": "^1.0.0",
    "mocha": "^2.3.4",
    "phantomjs-prebuilt": "^2.1.7",
    "sinon": "^1.16.1",
    "sinon-chai": "^2.8.0"
  },
  "directories": {},
  "dist": {
    "shasum": "03d82d0b983bf22366c5d22a0c291731625dcf80",
    "tarball": "https://registry.npmjs.org/angular-validation-match/-/angular-validation-match-1.9.0.tgz"
  },
  "gitHead": "22c809df4b7a45b829823fffb8320dbb02c3fee3",
  "homepage": "https://github.com/TheSharpieOne/angular-validation-match",
  "keywords": [
    "Angular",
    "input",
    "form",
    "confirmation",
    "match",
    "validation"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "TheSharpieOne",
      "url": "https://github.com/TheSharpieOne"
    }
  ],
  "name": "angular-validation-match",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/TheSharpieOne/angular-validation-match.svg?branch=master)](https://travis-ci.org/TheSharpieOne/angular-validation-match)\n[![Code Climate](https://codeclimate.com/github/TheSharpieOne/angular-validation-match/badges/gpa.svg)](https://codeclimate.com/github/TheSharpieOne/angular-validation-match) [![Test Coverage](https://codeclimate.com/github/TheSharpieOne/angular-validation-match/badges/coverage.svg)](https://codeclimate.com/github/TheSharpieOne/angular-validation-match)\n[![Coverage Status](https://coveralls.io/repos/TheSharpieOne/angular-validation-match/badge.png)](https://coveralls.io/r/TheSharpieOne/angular-validation-match)\n[![Dependency Status](https://david-dm.org/thesharpieone/angular-validation-match.svg?style=flat)](https://david-dm.org/thesharpieone/angular-validation-match)\n[![devDependency Status](https://david-dm.org/thesharpieone/angular-validation-match/dev-status.svg?style=flat)](https://david-dm.org/thesharpieone/angular-validation-match#info=devDependencies)\n\nAngular Validation: Match\n===================\n\nChecks if one input matches another.  Useful for confirming passwords, emails, or anything.\n\nThe `match` attribute should be set equal to the ng-model value of the field to match.\n\n**Demo:** http://jsfiddle.net/TheSharpieOne/r6Ltru6c/\n\nInstallation\n------------\n\n`bower install angular-validation-match`\n\nThen add `validation.match` to your angular dependencies\n\n<small>*Note: For angular 1.2 or lower use* `bower install angular-validation-match#1.3`</small>\n\nAlso: `npm install angular-validation-match`\n\nUsage\n-----\n\n**Simple Property Example**\n\n```html\nPassword: <input ng-model=\"password\" type=\"password\" />\nConfirm: <input ng-model=\"passwordConfirm\" type=\"password\" match=\"password\" />\n```\n\n**Object Property Example**\n\n```html\nPassword: <input ng-model=\"user.password\" type=\"password\" />\nConfirm: <input ng-model=\"user.passwordConfirm\" type=\"password\" match=\"user.password\" />\n```\n\n**Case insensitive (caseless) Example**\n\n```html\nPassword: <input ng-model=\"user.password\" type=\"password\" />\nConfirm: <input ng-model=\"user.passwordConfirm\" type=\"password\" match=\"user.password\" match-caseless=\"true\" />\n```\n<small>`match-caseless` can accept a scoped variable to allow the matching to be toggle-able between case insensitive and case sensitive. Default: false</small>\n\n**Not Match Example**<br>\nSometimes you want to ensure the values do *not* match, in that case you can use the `not-match` flag.\nThis also works in combination with `match-caseless` (if you want to not match case insensitively).\n```html\nPassword: <input ng-model=\"user.password\" type=\"password\" />\nConfirm: <input ng-model=\"user.passwordConfirm\" type=\"password\" match=\"user.password\" not-match=\"true\" />\n```\n<small>`not-match` can accept a scoped variable (`true`/`false`) to be toggle-able between matching and not matching. Default: false</small>\n\n**Ignore empty Example**\n\n```html\nPassword: <input ng-model=\"user.password\" type=\"password\" />\nConfirm: <input ng-model=\"user.passwordConfirm\" type=\"password\" match=\"user.password\" match-ignore-empty=\"true\" />\n```\n<small>`match-ignore-empty` can accept a scoped variable to disable validating an empty input. Default: false</small>\n\n**Display Custom Error**<br>\nIf your form and field both are named, you can access the validation result to show/hide messages.\n\n```html\n<form name=\"myForm\">\n      Password: <input ng-model=\"user.password\" type=\"password\" name=\"passwordName\" />\n      Confirm: <input ng-model=\"user.passwordConfirm\" type=\"password\" match=\"user.password\" name=\"myConfirmField\" />\n      <div ng-show=\"myForm.myConfirmField.$error.match\">Fields do not match!</div>\n</form>\n```\n\n**Validate Against the `$viewValue` shown in the input**<br>\nThe internal value (`$modelValue`) can differ from the external value (`$viewValue`) as appears in the input field shown to the user.  If your form and field both are named, you can validate against value displayed in the field, even if the field is invalid.\n\n```html\n<form name=\"myForm\">\n    Password: <input ng-model=\"user.password\" type=\"password\" name=\"myPasswordField\" />\n    Confirm: <input ng-model=\"user.passwordConfirm\" type=\"password\" match=\"myForm.myPasswordField\" name=\"myConfirmField\" />\n</form>\n```\n<small>Note: `$viewValue`s are specific to fields/elements, not models.  Different fields with the same `ngModel` and have different `$viewValue`s.  Becuase of this, you need to use the form directive (assigning a `name` to a form tag) in combination with the specific field's name attribute to specific which field/element you want to match in particular.</small>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/TheSharpieOne/angular-validation-match.git"
  },
  "scripts": {
    "build": "gulp build",
    "test": "gulp test"
  },
  "version": "1.9.0"
}
