{
  "_args": [
    [
      {
        "raw": "beautylog@^4.1.2",
        "scope": null,
        "escapedName": "beautylog",
        "name": "beautylog",
        "rawSpec": "^4.1.2",
        "spec": ">=4.1.2 <5.0.0",
        "type": "range"
      },
      "/Users/rguleria/Documents/Stuff/Starman/node_modules/gulp-typings"
    ]
  ],
  "_from": "beautylog@>=4.1.2 <5.0.0",
  "_id": "beautylog@4.2.2",
  "_inCache": true,
  "_location": "/beautylog",
  "_nodeVersion": "6.1.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/beautylog-4.2.2.tgz_1463241514309_0.844366115052253"
  },
  "_npmUser": {
    "name": "lossless",
    "email": "npm@lossless.digital"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "beautylog@^4.1.2",
    "scope": null,
    "escapedName": "beautylog",
    "name": "beautylog",
    "rawSpec": "^4.1.2",
    "spec": ">=4.1.2 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gulp-typings",
    "/smartenv"
  ],
  "_resolved": "https://registry.npmjs.org/beautylog/-/beautylog-4.2.2.tgz",
  "_shasum": "6cebdff8665099693d488151deee02890b92ce69",
  "_shrinkwrap": null,
  "_spec": "beautylog@^4.1.2",
  "_where": "/Users/rguleria/Documents/Stuff/Starman/node_modules/gulp-typings",
  "author": {
    "name": "Smart Coordination GmbH",
    "email": "office@push.rocks",
    "url": "https://push.rocks"
  },
  "bugs": {
    "url": "https://github.com/pushrocks/beautylog/issues"
  },
  "dependencies": {
    "cli-color": "^1.1.0",
    "cli-table2": "^0.2.0",
    "colors": "1.1.2",
    "figlet": "^1.1.2",
    "lodash": "^4.11.1",
    "ora": "^0.2.1",
    "q": "^1.4.1",
    "smartenv": "^1.2.2"
  },
  "description": "beautiful logging, TypeScript ready",
  "devDependencies": {
    "easyserve": "^0.0.5",
    "gulp": "^3.9.1",
    "gulp-browser": "^2.0.1",
    "npmts": "^5.1.5"
  },
  "directories": {},
  "dist": {
    "shasum": "6cebdff8665099693d488151deee02890b92ce69",
    "tarball": "https://registry.npmjs.org/beautylog/-/beautylog-4.2.2.tgz"
  },
  "gitHead": "57dd2586fdfd60604c9480066ef14981262849ec",
  "homepage": "https://github.com/pushrocks/beautylog",
  "keywords": [
    "log",
    "color",
    "console",
    "beautiful"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "lossless",
      "email": "npm@lossless.digital"
    },
    {
      "name": "philkunz",
      "email": "npm@philkunz.com"
    }
  ],
  "name": "beautylog",
  "optionalDependencies": {},
  "readme": "# beautylog\nbeautiful logging, TypeScript ready\n\n## Status\n[![Build Status](https://travis-ci.org/pushrocks/beautylog.svg?branch=v0.0.9)](https://travis-ci.org/pushrocks/beautylog)\n[![Dependency Status](https://david-dm.org/pushrocks/beautylog.svg)](https://david-dm.org/pushrocks/beautylog)\n[![bitHound Dependencies](https://www.bithound.io/github/pushrocks/beautylog/badges/dependencies.svg)](https://www.bithound.io/github/pushrocks/beautylog/master/dependencies/npm)\n[![bitHound Score](https://www.bithound.io/github/pushrocks/beautylog/badges/score.svg)](https://www.bithound.io/github/pushrocks/beautylog)\n[![codecov](https://codecov.io/gh/pushrocks/beautylog/branch/master/graph/badge.svg)](https://codecov.io/gh/pushrocks/beautylog)\n\n## Usage\n\n```javascript\nvar beautylog = require(\"beautylog\"); //for use in OS console environment AND browser console\n\nbeautylog.log(\"some log message\"); // normal console log message\nbeautylog.info(\"some log message\") // info console log message\nbeautylog.ok(\"some log message\"); // ok console log message\nbeautylog.warn(\"some log message\"); // warn console log message\nbeautylog.success(\"some success message\"); // success console log message\nbeautylog.error(\"some error message\"); // error console log message\n\n// alternatively you can use a logType parameter\nbeautylog.log(\"some log message\",\"normal\");\nbeautylog.log(\"some success message\",\"success\");\nbeautylog.log(\"some error message\",\"error\");\n/* ... and so on ... */\n```\nThe plugin produces beautiful output like this:\n![console.png](https://mediaserve.lossless.digital/github.com/pushrocks/beautylog/console.png)\n\n### Code Highlighting\n\n\n\n### Console Tables\nbeautylog allows displaying data in nice tables for better overview.\n\n> **Note:** This only works only in nodejs for now.\n\nThere are different types of tables.\n\n#### Custom\n\n```javascript\nvar beautylog = require(\"beautylog\");\nvar myTable = beautylog.table.new(\"custom\",[\"Heading1\".blue,\"Heading2\".blue,\"Heading3\".blue]); // type \"custom\"\nmyTable.push([\"check 1\",\"success\"]); // adds a row the myTable\nmyTable.push([\"check 2\",\"error\"]); // adds a row the myTable\nmyTable.push([\"check 3\",\"error\"]); // adds a row the myTable\nmyTable.print(); //prints myTable to the console\n```\n\n#### Checks\n\n```javascript\nvar beautylog = require(\"beautylog\");\nvar myTable = beautylog.table.new(\"checks\"); // type checks\nmyTable.push([\"check 1\",\"success\"]); // adds a row the myTable\nmyTable.push([\"check 2\",\"error\"]); // adds a row the myTable\nmyTable.push([\"check 3\",\"error\"]); // adds a row the myTable\nmyTable.print(); //prints myTable to the console\n```\n\nThe table from the code with type \"checks\" above looks like this:\n![table.png](https://mediaserve.lossless.digital/github.com/pushrocks/beautylog/table.png)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pushrocks/beautylog.git"
  },
  "scripts": {
    "gitsetup": "(git config push.followTags true)",
    "push": "(git push origin master && git push origin release && git push --follow-tags)",
    "reinstall": "(rm -r node_modules && npm install)",
    "release": "(npm test) && (git pull origin master && npm version patch && git checkout release && git merge master && git checkout master && npm run push)",
    "test": "(npmts)",
    "testbrowser": "(npm test) && (node testbrowser.js)",
    "update": "(git checkout master && git pull origin master) && (npm install)",
    "upgrade": "(npm run update) && (ncu upgradeAll && npm install)"
  },
  "typings": "dist/index.d.ts",
  "version": "4.2.2"
}
